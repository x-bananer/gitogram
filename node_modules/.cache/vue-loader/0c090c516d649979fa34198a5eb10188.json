{"remainingRequest":"/Users/xeniya/Desktop/gitogram/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/xeniya/Desktop/gitogram/src/components/storiesSlider/storiesSlider.vue?vue&type=template&id=73ca9639&scoped=true","dependencies":[{"path":"/Users/xeniya/Desktop/gitogram/src/components/storiesSlider/storiesSlider.vue","mtime":1642488971825},{"path":"/Users/xeniya/Desktop/gitogram/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/xeniya/Desktop/gitogram/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/xeniya/Desktop/gitogram/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/xeniya/Desktop/gitogram/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":1628298225000},{"path":"/Users/xeniya/Desktop/gitogram/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/xeniya/Desktop/gitogram/node_modules/vue-loader-v16/dist/index.js","mtime":1628298225000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CiAgPGRpdiBjbGFzcz0iYy1zdG9yaWVzLXNsaWRlciI+CiAgICA8ZGl2IGNsYXNzPSJjLXN0b3JpZXMtc2xpZGVyX19jb250YWluZXIiPgogICAgICA8dWwgY2xhc3M9InN0b3JpZXMiIHJlZj0ic2xpZGVyIj4KICAgICAgICA8bGkKICAgICAgICAgIGNsYXNzPSJzdG9yaWVzX19pdGVtIgogICAgICAgICAgdi1mb3I9Iih0cmVuZGluZywgbmR4KSBpbiB0cmVuZGluZ3MiCiAgICAgICAgICA6a2V5PSJ0cmVuZGluZy5pZCIKICAgICAgICAgIHJlZj0iaXRlbSIKICAgICAgICA+CiAgICAgICAgICA8c2xpZGVTdG9yeQogICAgICAgICAgICA6ZGF0YT0iZ2V0U3RvcnlEYXRhKHRyZW5kaW5nKSIKICAgICAgICAgICAgOmFjdGl2ZT0ic2xpZGVOZHggPT09IG5keCIKICAgICAgICAgICAgOmxvYWRpbmc9InNsaWRlTmR4ID09PSBuZHggJiYgbG9hZGluZyIKICAgICAgICAgICAgOmJ0bnNTaG93bj0iYWN0aXZlQnRucyIKICAgICAgICAgICAgQG9uTmV4dFNsaWRlPSJoYW5kbGVTbGlkZShuZHggKyAxKSIKICAgICAgICAgICAgQG9uUHJldlNsaWRlPSJoYW5kbGVTbGlkZShuZHggLSAxKSIKICAgICAgICAgICAgQG9uUHJvZ3Jlc3NGaW5pc2g9ImhhbmRsZVNsaWRlT25Qcm9ncmVzc0ZpbmlzaChuZHggKyAxKSIKICAgICAgICAgICAgQG9uRm9sbG93PSJzdGFyUmVwbyIKICAgICAgICAgICAgQG9uVW5mb2xsb3c9InVuU3RhclJlcG8iCiAgICAgICAgICAvPgogICAgICAgIDwvbGk+CiAgICAgIDwvdWw+CiAgICA8L2Rpdj4KICA8L2Rpdj4K"},{"version":3,"sources":["/Users/xeniya/Desktop/gitogram/src/components/storiesSlider/storiesSlider.vue"],"names":[],"mappings":"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","file":"/Users/xeniya/Desktop/gitogram/src/components/storiesSlider/storiesSlider.vue","sourceRoot":"","sourcesContent":["<template>\n  <div class=\"c-stories-slider\">\n    <div class=\"c-stories-slider__container\">\n      <ul class=\"stories\" ref=\"slider\">\n        <li\n          class=\"stories__item\"\n          v-for=\"(trending, ndx) in trendings\"\n          :key=\"trending.id\"\n          ref=\"item\"\n        >\n          <slideStory\n            :data=\"getStoryData(trending)\"\n            :active=\"slideNdx === ndx\"\n            :loading=\"slideNdx === ndx && loading\"\n            :btnsShown=\"activeBtns\"\n            @onNextSlide=\"handleSlide(ndx + 1)\"\n            @onPrevSlide=\"handleSlide(ndx - 1)\"\n            @onProgressFinish=\"handleSlideOnProgressFinish(ndx + 1)\"\n            @onFollow=\"starRepo\"\n            @onUnfollow=\"unStarRepo\"\n          />\n        </li>\n      </ul>\n    </div>\n  </div>\n</template>\n\n<script>\nimport slideStory from '../slideStory/slideStory.vue'\nimport { mapState, mapActions } from 'vuex'\n\nexport default {\n  name: 'storiesSlider',\n  components: {\n    slideStory\n  },\n  props: {\n    initialSlide: {\n      type: Number\n    }\n  },\n  data () {\n    return {\n      slideNdx: 0,\n      sliderPosition: 0,\n      loading: false,\n      btnsShown: true\n    }\n  },\n  computed: {\n    ...mapState({\n      trendings: (state) => state.data\n    }),\n    activeBtns () {\n      if (this.btnsShown === false) return []\n      if (this.slideNdx === 0) return ['next']\n      if (this.slideNdx === this.trendings.length - 1) return ['prev']\n      return ['next', 'prev']\n    }\n  },\n  methods: {\n    ...mapActions({\n      fetchTrendings: 'fetchTrendings',\n      fetchReadme: 'fetchReadme',\n      starRepo: 'starRepo',\n      unStarRepo: 'unStarRepo'\n    }),\n    async fetchReadmeForActiveSlide () {\n      const { id, owner, name } = this.trendings[this.slideNdx]\n      await this.fetchReadme({ id, owner: owner.login, repo: name })\n    },\n    getStoryData (obj) {\n      return {\n        id: obj.id,\n        userAvatar: obj.owner?.avatar_url,\n        username: obj.owner?.login,\n        content: obj.readme,\n        following: obj.following\n      }\n    },\n    moveSlider (slideNdx) {\n      const { slider, item } = this.$refs\n      const slideWidth = parseInt(\n        getComputedStyle(item).getPropertyValue('width'),\n        10\n      )\n      this.slideNdx = slideNdx\n      this.sliderPosition = (-(slideWidth * slideNdx))\n      slider.style.transform = `translateX(${this.sliderPosition}px)`\n    },\n    async loadReadme () {\n      this.loading = true\n      this.btnsShown = false\n      try {\n        await this.fetchReadmeForActiveSlide()\n      } catch (error) {\n        console.log(error)\n        throw error\n      } finally {\n        this.loading = false\n        this.btnsShown = true\n      }\n    },\n    async handleSlide (slideNdx) {\n      this.moveSlider(slideNdx)\n      await this.loadReadme()\n    },\n    async handleSlideOnProgressFinish (slideNdx) {\n      if (this.trendings.length !== slideNdx) {\n        this.moveSlider(slideNdx)\n        await this.loadReadme()\n      }\n    }\n  },\n  async mounted () {\n    if (this.initialSlide) {\n      const ndx = this.trendings.findIndex(\n        (item) => item.id === this.initialSlide\n      )\n      await this.handleSlide(ndx)\n    }\n    if (!this.trendings.length) {\n      await this.fetchTrendings()\n    }\n    await this.loadReadme()\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped src=\"./storiesSlider.scss\"></style>\n"]}]}