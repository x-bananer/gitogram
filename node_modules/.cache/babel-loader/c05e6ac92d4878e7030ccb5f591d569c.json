{"remainingRequest":"/Users/xeniya/Desktop/gitogram/node_modules/thread-loader/dist/cjs.js!/Users/xeniya/Desktop/gitogram/node_modules/babel-loader/lib/index.js!/Users/xeniya/Desktop/gitogram/node_modules/vue-loader-v16/dist/templateLoader.js??ref--6!/Users/xeniya/Desktop/gitogram/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/xeniya/Desktop/gitogram/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/xeniya/Desktop/gitogram/src/components/progress/progress.vue?vue&type=template&id=3088fb8e&scoped=true","dependencies":[{"path":"/Users/xeniya/Desktop/gitogram/src/components/progress/progress.vue","mtime":1642488971817},{"path":"/Users/xeniya/Desktop/gitogram/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/xeniya/Desktop/gitogram/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/xeniya/Desktop/gitogram/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/xeniya/Desktop/gitogram/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":1628298225000},{"path":"/Users/xeniya/Desktop/gitogram/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/xeniya/Desktop/gitogram/node_modules/vue-loader-v16/dist/index.js","mtime":1628298225000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgY3JlYXRlRWxlbWVudFZOb2RlIGFzIF9jcmVhdGVFbGVtZW50Vk5vZGUsIG5vcm1hbGl6ZUNsYXNzIGFzIF9ub3JtYWxpemVDbGFzcywgb3BlbkJsb2NrIGFzIF9vcGVuQmxvY2ssIGNyZWF0ZUVsZW1lbnRCbG9jayBhcyBfY3JlYXRlRWxlbWVudEJsb2NrLCB3aXRoU2NvcGVJZCBhcyBfd2l0aFNjb3BlSWQsIHB1c2hTY29wZUlkIGFzIF9wdXNoU2NvcGVJZCwgcG9wU2NvcGVJZCBhcyBfcG9wU2NvcGVJZCB9IGZyb20gInZ1ZSI7CgpfcHVzaFNjb3BlSWQoImRhdGEtdi0zMDg4ZmI4ZSIpOwoKdmFyIF9ob2lzdGVkXzEgPSB7CiAgcmVmOiAiaW5kaWNhdG9yIiwKICBjbGFzczogImluZGljYXRvciIKfTsKCl9wb3BTY29wZUlkKCk7CgpleHBvcnQgZnVuY3Rpb24gcmVuZGVyKF9jdHgsIF9jYWNoZSwgJHByb3BzLCAkc2V0dXAsICRkYXRhLCAkb3B0aW9ucykgewogIHJldHVybiBfb3BlbkJsb2NrKCksIF9jcmVhdGVFbGVtZW50QmxvY2soImRpdiIsIHsKICAgIGNsYXNzOiBfbm9ybWFsaXplQ2xhc3MoWyRwcm9wcy5hY3RpdmUgPyAnYWN0aXZlJyA6ICcnLCAiYy1wcm9ncmVzcyJdKQogIH0sIFtfY3JlYXRlRWxlbWVudFZOb2RlKCJkaXYiLCBfaG9pc3RlZF8xLCBudWxsLCA1MTIpXSwgMik7Cn0="},{"version":3,"sources":["/Users/xeniya/Desktop/gitogram/src/components/progress/progress.vue"],"names":[],"mappings":";;;;;AAES,EAAA,GAAG,EAAC,W;AAAY,EAAA,KAAK,EAAC;;;;;;uBAD7B,mBAAA,CAEM,KAFN,EAEM;AAFA,IAAA,KAAK,EAAA,eAAA,CAAA,CAAE,MAAA,CAAA,MAAA,GAAM,QAAN,GAAM,EAAR,EAAgC,YAAhC,CAAA;AAEL,GAFN,E,CACE,mBAAA,CAA6C,KAA7C,EAAA,UAAA,EAA6C,IAA7C,EAA6C,GAA7C,C,CADF,E,CAAA,C","sourcesContent":["<template>\n  <div :class=\"active ? 'active' : ''\" class=\"c-progress\">\n    <div ref=\"indicator\" class=\"indicator\"></div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'Progress',\n  data () {\n    return {\n      finish: false\n    }\n  },\n  emits: ['onFinish'],\n  methods: {\n    emitOnFinish () {\n      this.$emit('onFinish')\n    }\n  },\n  props: {\n    active: Boolean\n  },\n  mounted () {\n    this.$nextTick(() => {\n      this.finish = true\n    })\n\n    this.$refs.indicator.addEventListener('transitionend', this.emitOnFinish)\n  },\n  beforeUnmount () {\n    this.$refs.indicator.removeEventListener('transitionend', this.emitOnFinish)\n  }\n}\n</script>\n\n<style lang='scss' src='./progress.scss' scoped></style>\n"],"sourceRoot":""}]}