{"remainingRequest":"/Users/xeniya/Desktop/gitogram/node_modules/thread-loader/dist/cjs.js!/Users/xeniya/Desktop/gitogram/node_modules/babel-loader/lib/index.js!/Users/xeniya/Desktop/gitogram/node_modules/vue-loader-v16/dist/templateLoader.js??ref--6!/Users/xeniya/Desktop/gitogram/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/xeniya/Desktop/gitogram/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/xeniya/Desktop/gitogram/src/pages/auth/auth.vue?vue&type=template&id=c29f166a&scoped=true","dependencies":[{"path":"/Users/xeniya/Desktop/gitogram/src/pages/auth/auth.vue","mtime":1642488971858},{"path":"/Users/xeniya/Desktop/gitogram/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/xeniya/Desktop/gitogram/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/xeniya/Desktop/gitogram/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/xeniya/Desktop/gitogram/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":1628298225000},{"path":"/Users/xeniya/Desktop/gitogram/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/xeniya/Desktop/gitogram/node_modules/vue-loader-v16/dist/index.js","mtime":1628298225000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgcmVzb2x2ZUNvbXBvbmVudCBhcyBfcmVzb2x2ZUNvbXBvbmVudCwgY3JlYXRlVk5vZGUgYXMgX2NyZWF0ZVZOb2RlLCBjcmVhdGVFbGVtZW50Vk5vZGUgYXMgX2NyZWF0ZUVsZW1lbnRWTm9kZSwgb3BlbkJsb2NrIGFzIF9vcGVuQmxvY2ssIGNyZWF0ZUVsZW1lbnRCbG9jayBhcyBfY3JlYXRlRWxlbWVudEJsb2NrLCB3aXRoU2NvcGVJZCBhcyBfd2l0aFNjb3BlSWQsIHB1c2hTY29wZUlkIGFzIF9wdXNoU2NvcGVJZCwgcG9wU2NvcGVJZCBhcyBfcG9wU2NvcGVJZCB9IGZyb20gInZ1ZSI7CmltcG9ydCBfaW1wb3J0c18wIGZyb20gJy4uLy4uL2ltYWdlcy9jb3Zlci5wbmcnOwoKX3B1c2hTY29wZUlkKCJkYXRhLXYtYzI5ZjE2NmEiKTsKCnZhciBfaG9pc3RlZF8xID0gewogIGNsYXNzOiAiYy1hdXRoIgp9Owp2YXIgX2hvaXN0ZWRfMiA9IHsKICBjbGFzczogImF1dGhfX2Rlc2MiCn07CnZhciBfaG9pc3RlZF8zID0gewogIGNsYXNzOiAiYXV0aF9fdGl0bGUiCn07Cgp2YXIgX2hvaXN0ZWRfNCA9IC8qI19fUFVSRV9fKi9fY3JlYXRlRWxlbWVudFZOb2RlKCJkaXYiLCB7CiAgY2xhc3M6ICJhdXRoX190ZXh0Igp9LCAiIE1vcmUgdGhhbiBqdXN0IG9uZSByZXBvc2l0b3J5LiBUaGlzIGlzIG91ciBkaWdpdGFsIHdvcmxkICIsIC0xKTsKCnZhciBfaG9pc3RlZF81ID0gewogIGNsYXNzOiAiYnRuLWF1dGhfX2NvbnRlbnQiCn07Cgp2YXIgX2hvaXN0ZWRfNiA9IC8qI19fUFVSRV9fKi9fY3JlYXRlRWxlbWVudFZOb2RlKCJkaXYiLCB7CiAgY2xhc3M6ICJidG4tYXV0aF9fdGl0bGUiCn0sICJBdXRob3JpemUgd2l0aCBnaXRodWIiLCAtMSk7Cgp2YXIgX2hvaXN0ZWRfNyA9IHsKICBjbGFzczogImJ0bi1hdXRoX19pY29uIgp9OwoKdmFyIF9ob2lzdGVkXzggPSAvKiNfX1BVUkVfXyovX2NyZWF0ZUVsZW1lbnRWTm9kZSgiZGl2IiwgewogIGNsYXNzOiAiYXV0aF9faW1nIgp9LCBbLyojX19QVVJFX18qL19jcmVhdGVFbGVtZW50Vk5vZGUoImltZyIsIHsKICBzcmM6IF9pbXBvcnRzXzAsCiAgYWx0OiAiR2l0b2dyYW0iLAogIGNsYXNzOiAiYXV0aF9faWNvIgp9KV0sIC0xKTsKCl9wb3BTY29wZUlkKCk7CgpleHBvcnQgZnVuY3Rpb24gcmVuZGVyKF9jdHgsIF9jYWNoZSwgJHByb3BzLCAkc2V0dXAsICRkYXRhLCAkb3B0aW9ucykgewogIHZhciBfY29tcG9uZW50X2ljb24gPSBfcmVzb2x2ZUNvbXBvbmVudCgiaWNvbiIpOwoKICByZXR1cm4gX29wZW5CbG9jaygpLCBfY3JlYXRlRWxlbWVudEJsb2NrKCJkaXYiLCBfaG9pc3RlZF8xLCBbX2NyZWF0ZUVsZW1lbnRWTm9kZSgiZGl2IiwgX2hvaXN0ZWRfMiwgW19jcmVhdGVFbGVtZW50Vk5vZGUoImRpdiIsIF9ob2lzdGVkXzMsIFtfY3JlYXRlVk5vZGUoX2NvbXBvbmVudF9pY29uLCB7CiAgICBuYW1lOiAibG9nbyIKICB9KV0pLCBfaG9pc3RlZF80XSksIF9jcmVhdGVFbGVtZW50Vk5vZGUoImJ1dHRvbiIsIHsKICAgIGNsYXNzOiAiYnRuLWF1dGgiLAogICAgb25DbGljazogX2NhY2hlWzBdIHx8IChfY2FjaGVbMF0gPSBmdW5jdGlvbiAoKSB7CiAgICAgIHJldHVybiAkb3B0aW9ucy5vbkF1dGggJiYgJG9wdGlvbnMub25BdXRoLmFwcGx5KCRvcHRpb25zLCBhcmd1bWVudHMpOwogICAgfSkKICB9LCBbX2NyZWF0ZUVsZW1lbnRWTm9kZSgiZGl2IiwgX2hvaXN0ZWRfNSwgW19ob2lzdGVkXzYsIF9jcmVhdGVFbGVtZW50Vk5vZGUoImRpdiIsIF9ob2lzdGVkXzcsIFtfY3JlYXRlVk5vZGUoX2NvbXBvbmVudF9pY29uLCB7CiAgICBuYW1lOiAiYXV0aCIKICB9KV0pXSldKSwgX2hvaXN0ZWRfOF0pOwp9"},{"version":3,"sources":["/Users/xeniya/Desktop/gitogram/src/pages/auth/auth.vue"],"names":[],"mappings":";OAmBW,U,MAA4B,wB;;;;;AAlBhC,EAAA,KAAK,EAAC;;;AACJ,EAAA,KAAK,EAAC;;;AACJ,EAAA,KAAK,EAAC;;;8BAGX,mBAAA,CAEM,KAFN,EAEM;AAFD,EAAA,KAAK,EAAC;AAEL,CAFN,EAAwB,4DAAxB,EAEA,CAAA,CAFA,C;;;AAKK,EAAA,KAAK,EAAC;;;8BACT,mBAAA,CAAwD,KAAxD,EAAwD;AAAnD,EAAA,KAAK,EAAC;AAA6C,CAAxD,EAA6B,uBAA7B,EAAkD,CAAA,CAAlD,C;;;AACK,EAAA,KAAK,EAAC;;;8BAKf,mBAAA,CAEM,KAFN,EAEM;AAFD,EAAA,KAAK,EAAC;AAEL,CAFN,EAAsB,C,aACpB,mBAAA,CAAqE,KAArE,EAAqE;AAAhE,EAAA,GAA4B,EAA5B,UAAgE;AAAnC,EAAA,GAAG,EAAC,UAA+B;AAApB,EAAA,KAAK,EAAC;AAAc,CAArE,CADoB,CAAtB,E,EAAA,C;;;;;;;uBAjBF,mBAAA,CAoBM,KApBN,EAAA,UAAA,EAoBM,CAnBJ,mBAAA,CAOM,KAPN,EAAA,UAAA,EAOM,CANJ,mBAAA,CAEM,KAFN,EAAA,UAAA,EAEM,CADJ,YAAA,CAAoB,eAApB,EAAoB;AAAd,IAAA,IAAI,EAAC;AAAS,GAApB,CACI,CAFN,CAMI,EAHJ,UAGI,CAPN,CAmBI,EAXJ,mBAAA,CAOS,QAPT,EAOS;AAPD,IAAA,KAAK,EAAC,UAOL;AAPiB,IAAA,OAAK,EAAA,MAAA,CAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,CAAA,GAAA;AAAA,aAAE,QAAA,CAAA,MAAA,IAAA,QAAA,CAAA,MAAA,OAAA,QAAA,YAAF;AAAA,KAAA;AAOtB,GAPT,E,CACE,mBAAA,CAKM,KALN,EAAA,UAAA,EAKM,CAJJ,UAII,EAHJ,mBAAA,CAEM,KAFN,EAAA,UAAA,EAEM,CADJ,YAAA,CAAoB,eAApB,EAAoB;AAAd,IAAA,IAAI,EAAC;AAAS,GAApB,CACI,CAFN,CAGI,CALN,C,CADF,CAWI,EAHJ,UAGI,CApBN,C","sourcesContent":["<template>\n  <div class=\"c-auth\">\n    <div class=\"auth__desc\">\n      <div class=\"auth__title\">\n        <icon name=\"logo\" />\n      </div>\n      <div class=\"auth__text\">\n        More than just one repository. This is our digital world\n      </div>\n    </div>\n    <button class=\"btn-auth\" @click=\"onAuth\">\n      <div class=\"btn-auth__content\">\n        <div class=\"btn-auth__title\">Authorize with github</div>\n        <div class=\"btn-auth__icon\">\n          <icon name=\"auth\" />\n        </div>\n      </div>\n    </button>\n    <div class=\"auth__img\">\n      <img src=\"../../images/cover.png\" alt=\"Gitogram\" class=\"auth__ico\" />\n    </div>\n  </div>\n</template>\n\n<script>\nimport { icon } from '../../icons/'\nimport env from '../../../env'\nexport default {\n  name: 'Auth',\n  components: {\n    icon\n  },\n  data () {\n    return {}\n  },\n  computed: {},\n  methods: {\n    onAuth () {\n      const githubAuthApi = 'https://github.com/login/oauth/authorize'\n      const params = new URLSearchParams()\n      params.append('client_id', env.clientId)\n      params.append('scope', 'repo,user')\n      window.location.href = `${githubAuthApi}?${params}`\n    }\n  },\n  async created () {\n    const code = new URLSearchParams(window.location.search).get('code')\n    if (code) {\n      try {\n        const response = await fetch(\n          'https://webdev-api.loftschool.com/github', {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              clientId: env.clientId, code, clientSecret: env.clientSecret\n            })\n          }\n        )\n        const { token } = await response.json()\n        localStorage.setItem('token', token)\n        this.$router.replace({ name: 'feeds' })\n      } catch (error) {\n        console.log(error)\n      }\n    }\n  }\n}\n</script>\n\n<style src=\"./auth.scss\" lang=\"scss\" scoped></style>\n"],"sourceRoot":""}]}