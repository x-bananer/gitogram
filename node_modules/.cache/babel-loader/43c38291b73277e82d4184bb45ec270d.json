{"remainingRequest":"/Users/xeniya/Desktop/gitogram/node_modules/thread-loader/dist/cjs.js!/Users/xeniya/Desktop/gitogram/node_modules/babel-loader/lib/index.js!/Users/xeniya/Desktop/gitogram/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/xeniya/Desktop/gitogram/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/xeniya/Desktop/gitogram/src/components/toggler/toggler.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/xeniya/Desktop/gitogram/src/components/toggler/toggler.vue","mtime":1642488971831},{"path":"/Users/xeniya/Desktop/gitogram/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/xeniya/Desktop/gitogram/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/xeniya/Desktop/gitogram/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/xeniya/Desktop/gitogram/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/xeniya/Desktop/gitogram/node_modules/vue-loader-v16/dist/index.js","mtime":1628298225000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgaWNvbiB9IGZyb20gJy4uLy4uL2ljb25zJzsKZXhwb3J0IGRlZmF1bHQgewogIGNvbXBvbmVudHM6IHsKICAgIGljb246IGljb24KICB9LAogIGVtaXRzOiBbJ29uVG9nZ2xlJ10sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGlzT3BlbmVkOiBmYWxzZQogICAgfTsKICB9LAogIG1ldGhvZHM6IHsKICAgIHRvZ2dsZTogZnVuY3Rpb24gdG9nZ2xlKCkgewogICAgICB0aGlzLmlzT3BlbmVkID0gIXRoaXMuaXNPcGVuZWQ7CiAgICAgIHRoaXMuJGVtaXQoJ29uVG9nZ2xlJywgdGhpcy5pc09wZW5lZCk7CiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["/Users/xeniya/Desktop/gitogram/src/components/toggler/toggler.vue"],"names":[],"mappings":"AAUA,SAAS,IAAT,QAAqB,aAArB;AAEA,eAAe;AACb,EAAA,UAAU,EAAE;AACV,IAAA,IAAG,EAAH;AADU,GADC;AAIb,EAAA,KAAK,EAAE,CAAC,UAAD,CAJM;AAKb,EAAA,IALa,kBAKL;AACN,WAAO;AACL,MAAA,QAAQ,EAAE;AADL,KAAP;AAGD,GATY;AAUb,EAAA,OAAO,EAAE;AACP,IAAA,MADO,oBACG;AACR,WAAK,QAAL,GAAgB,CAAC,KAAK,QAAtB;AACA,WAAK,KAAL,CAAW,UAAX,EAAuB,KAAK,QAA5B;AACF;AAJO;AAVI,CAAf","sourcesContent":["<template>\n  <button :class=\"['button', { active: isOpened }]\" @click=\"toggle\">\n    <span class=\"text\">{{ isOpened ? \"Hide\" : \"Show\" }} issues</span>\n    <span class=\"icon\">\n      <icon name=\"triangle\" />\n    </span>\n  </button>\n</template>\n\n<script>\nimport { icon } from '../../icons'\n\nexport default {\n  components: {\n    icon\n  },\n  emits: ['onToggle'],\n  data () {\n    return {\n      isOpened: false\n    }\n  },\n  methods: {\n    toggle () {\n      this.isOpened = !this.isOpened\n      this.$emit('onToggle', this.isOpened)\n    }\n  }\n}\n</script>\n\n<style src=\"./toggler.scss\" lang=\"scss\" scoped>\n\n</style>\n"],"sourceRoot":""}]}