{"remainingRequest":"/Users/xeniya/Desktop/gitogram/node_modules/babel-loader/lib/index.js!/Users/xeniya/Desktop/gitogram/node_modules/vue-loader-v16/dist/templateLoader.js??ref--6!/Users/xeniya/Desktop/gitogram/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/xeniya/Desktop/gitogram/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/xeniya/Desktop/gitogram/src/pages/feeds/feeds.vue?vue&type=template&id=2a473b72&scoped=true","dependencies":[{"path":"/Users/xeniya/Desktop/gitogram/src/pages/feeds/feeds.vue","mtime":1642440951472},{"path":"/Users/xeniya/Desktop/gitogram/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/xeniya/Desktop/gitogram/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/xeniya/Desktop/gitogram/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":1628298225000},{"path":"/Users/xeniya/Desktop/gitogram/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/xeniya/Desktop/gitogram/node_modules/vue-loader-v16/dist/index.js","mtime":1628298225000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZnVuY3Rpb24ubmFtZS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN5bWJvbC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN5bWJvbC5kZXNjcmlwdGlvbi5qcyI7CmltcG9ydCB7IHJlc29sdmVDb21wb25lbnQgYXMgX3Jlc29sdmVDb21wb25lbnQsIGNyZWF0ZVZOb2RlIGFzIF9jcmVhdGVWTm9kZSwgY3JlYXRlRWxlbWVudFZOb2RlIGFzIF9jcmVhdGVFbGVtZW50Vk5vZGUsIHJlbmRlckxpc3QgYXMgX3JlbmRlckxpc3QsIEZyYWdtZW50IGFzIF9GcmFnbWVudCwgb3BlbkJsb2NrIGFzIF9vcGVuQmxvY2ssIGNyZWF0ZUVsZW1lbnRCbG9jayBhcyBfY3JlYXRlRWxlbWVudEJsb2NrLCB3aXRoQ3R4IGFzIF93aXRoQ3R4LCB0b0Rpc3BsYXlTdHJpbmcgYXMgX3RvRGlzcGxheVN0cmluZywgd2l0aFNjb3BlSWQgYXMgX3dpdGhTY29wZUlkLCBwdXNoU2NvcGVJZCBhcyBfcHVzaFNjb3BlSWQsIHBvcFNjb3BlSWQgYXMgX3BvcFNjb3BlSWQgfSBmcm9tICJ2dWUiOwoKX3B1c2hTY29wZUlkKCJkYXRhLXYtMmE0NzNiNzIiKTsKCnZhciBfaG9pc3RlZF8xID0gewogIGNsYXNzOiAidG9wbGluZSIKfTsKdmFyIF9ob2lzdGVkXzIgPSB7CiAgY2xhc3M6ICJ0b3BsaW5lX191c2VyLWljb25zIgp9Owp2YXIgX2hvaXN0ZWRfMyA9IHsKICBjbGFzczogInN0b3JpZXMiCn07CnZhciBfaG9pc3RlZF80ID0gewogIGNsYXNzOiAiY29sdW1ucyIKfTsKdmFyIF9ob2lzdGVkXzUgPSB7CiAgY2xhc3M6ICJjb2x1bW5fX2NvbnRlbnQiCn07CnZhciBfaG9pc3RlZF82ID0gWyJ0ZXh0Q29udGVudCJdOwp2YXIgX2hvaXN0ZWRfNyA9IFsidGV4dENvbnRlbnQiXTsKdmFyIF9ob2lzdGVkXzggPSB7CiAgY2xhc3M6ICJjb2x1bW5fX3Rvb2xzIgp9OwoKX3BvcFNjb3BlSWQoKTsKCmV4cG9ydCBmdW5jdGlvbiByZW5kZXIoX2N0eCwgX2NhY2hlLCAkcHJvcHMsICRzZXR1cCwgJGRhdGEsICRvcHRpb25zKSB7CiAgdmFyIF90aGlzID0gdGhpczsKCiAgdmFyIF9jb21wb25lbnRfbG9nbyA9IF9yZXNvbHZlQ29tcG9uZW50KCJsb2dvIik7CgogIHZhciBfY29tcG9uZW50X3Byb2ZpbGVUb29scyA9IF9yZXNvbHZlQ29tcG9uZW50KCJwcm9maWxlVG9vbHMiKTsKCiAgdmFyIF9jb21wb25lbnRfc3RvcnlVc2VySXRlbSA9IF9yZXNvbHZlQ29tcG9uZW50KCJzdG9yeVVzZXJJdGVtIik7CgogIHZhciBfY29tcG9uZW50X3RvcGxpbmUgPSBfcmVzb2x2ZUNvbXBvbmVudCgidG9wbGluZSIpOwoKICB2YXIgX2NvbXBvbmVudF90b29scyA9IF9yZXNvbHZlQ29tcG9uZW50KCJ0b29scyIpOwoKICB2YXIgX2NvbXBvbmVudF9jb2x1bW4gPSBfcmVzb2x2ZUNvbXBvbmVudCgiY29sdW1uIik7CgogIHJldHVybiBfb3BlbkJsb2NrKCksIF9jcmVhdGVFbGVtZW50QmxvY2soX0ZyYWdtZW50LCBudWxsLCBbX2NyZWF0ZUVsZW1lbnRWTm9kZSgiZGl2IiwgX2hvaXN0ZWRfMSwgW19jcmVhdGVWTm9kZShfY29tcG9uZW50X3RvcGxpbmUsIG51bGwsIHsKICAgIGhlYWRsaW5lOiBfd2l0aEN0eChmdW5jdGlvbiAoKSB7CiAgICAgIHZhciBfdGhpcyR1c2VyOwoKICAgICAgcmV0dXJuIFtfY3JlYXRlVk5vZGUoX2NvbXBvbmVudF9sb2dvLCB7CiAgICAgICAgY29sb3I6ICJibGFjayIKICAgICAgfSksIF9jcmVhdGVFbGVtZW50Vk5vZGUoImRpdiIsIF9ob2lzdGVkXzIsIFtfY3JlYXRlVk5vZGUoX2NvbXBvbmVudF9wcm9maWxlVG9vbHMsIHsKICAgICAgICBzb3VyY2U6IChfdGhpcyR1c2VyID0gX3RoaXMudXNlcikgPT09IG51bGwgfHwgX3RoaXMkdXNlciA9PT0gdm9pZCAwID8gdm9pZCAwIDogX3RoaXMkdXNlci5hdmF0YXJfdXJsLAogICAgICAgIG9uT25Mb2dvdXQ6IF9jdHgubG9nb3V0LAogICAgICAgIG9uT25Vc2VyOiBfY2FjaGVbMF0gfHwgKF9jYWNoZVswXSA9IGZ1bmN0aW9uICgkZXZlbnQpIHsKICAgICAgICAgIHJldHVybiBfY3R4LiRyb3V0ZXIucHVzaCh7CiAgICAgICAgICAgIG5hbWU6ICdwcm9maWxlJwogICAgICAgICAgfSk7CiAgICAgICAgfSksCiAgICAgICAgb25PbkhvbWU6IF9jYWNoZVsxXSB8fCAoX2NhY2hlWzFdID0gZnVuY3Rpb24gKCRldmVudCkgewogICAgICAgICAgcmV0dXJuIF9jdHguJHJvdXRlci5wdXNoKHsKICAgICAgICAgICAgbmFtZTogJ2ZlZWRzJwogICAgICAgICAgfSk7CiAgICAgICAgfSkKICAgICAgfSwgbnVsbCwgOAogICAgICAvKiBQUk9QUyAqLwogICAgICAsIFsic291cmNlIiwgIm9uT25Mb2dvdXQiXSldKV07CiAgICB9KSwKICAgIGNvbnRlbnQ6IF93aXRoQ3R4KGZ1bmN0aW9uICgpIHsKICAgICAgcmV0dXJuIFtfY3JlYXRlRWxlbWVudFZOb2RlKCJ1bCIsIF9ob2lzdGVkXzMsIFsoX29wZW5CbG9jayh0cnVlKSwgX2NyZWF0ZUVsZW1lbnRCbG9jayhfRnJhZ21lbnQsIG51bGwsIF9yZW5kZXJMaXN0KF9jdHguZ2V0VW5zdGFycmVkT25seSwgZnVuY3Rpb24gKHN0b3J5KSB7CiAgICAgICAgcmV0dXJuIF9vcGVuQmxvY2soKSwgX2NyZWF0ZUVsZW1lbnRCbG9jaygibGkiLCB7CiAgICAgICAgICBjbGFzczogInN0b3JpZXNfX2l0ZW0iLAogICAgICAgICAga2V5OiBzdG9yeS5pZAogICAgICAgIH0sIFtfY3JlYXRlVk5vZGUoX2NvbXBvbmVudF9zdG9yeVVzZXJJdGVtLCB7CiAgICAgICAgICBhdmF0YXI6IHN0b3J5Lm93bmVyLmF2YXRhcl91cmwsCiAgICAgICAgICB1c2VybmFtZTogc3Rvcnkub3duZXIubG9naW4sCiAgICAgICAgICBvbk9uUHJlc3M6IGZ1bmN0aW9uIG9uT25QcmVzcygkZXZlbnQpIHsKICAgICAgICAgICAgcmV0dXJuIF9jdHguJHJvdXRlci5wdXNoKHsKICAgICAgICAgICAgICBuYW1lOiAnc3RvcmllcycsCiAgICAgICAgICAgICAgcGFyYW1zOiB7CiAgICAgICAgICAgICAgICBpbml0aWFsU2xpZGU6IHN0b3J5LmlkCiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9KTsKICAgICAgICAgIH0KICAgICAgICB9LCBudWxsLCA4CiAgICAgICAgLyogUFJPUFMgKi8KICAgICAgICAsIFsiYXZhdGFyIiwgInVzZXJuYW1lIiwgIm9uT25QcmVzcyJdKV0pOwogICAgICB9KSwgMTI4CiAgICAgIC8qIEtFWUVEX0ZSQUdNRU5UICovCiAgICAgICkpXSldOwogICAgfSksCiAgICBfOiAxCiAgICAvKiBTVEFCTEUgKi8KCiAgfSldKSwgX2NyZWF0ZUVsZW1lbnRWTm9kZSgidWwiLCBfaG9pc3RlZF80LCBbKF9vcGVuQmxvY2sodHJ1ZSksIF9jcmVhdGVFbGVtZW50QmxvY2soX0ZyYWdtZW50LCBudWxsLCBfcmVuZGVyTGlzdCh0aGlzLnN0YXJyZWQsIGZ1bmN0aW9uIChyZXBvcykgewogICAgcmV0dXJuIF9vcGVuQmxvY2soKSwgX2NyZWF0ZUVsZW1lbnRCbG9jaygibGkiLCB7CiAgICAgIGNsYXNzOiAiY29sdW1ucy1pdGVtIiwKICAgICAga2V5OiByZXBvcy5pZAogICAgfSwgW19jcmVhdGVWTm9kZShfY29tcG9uZW50X2NvbHVtbiwgewogICAgICBuaWNrOiByZXBvcy5vd25lci5sb2dpbiwKICAgICAgcGF0aDogcmVwb3Mub3duZXIuYXZhdGFyX3VybCwKICAgICAgY29tbWVudHM6IHJlcG9zLmlzc3Vlc0xpc3QsCiAgICAgIG9uVG9nZ2xlSXNzdWVzOiBmdW5jdGlvbiBvblRvZ2dsZUlzc3VlcygkZXZlbnQpIHsKICAgICAgICByZXR1cm4gJG9wdGlvbnMudG9nZ2xlSXNzdWVzKHJlcG9zLCAkZXZlbnQpOwogICAgICB9LAogICAgICBkYXRlOiByZXBvcy51cGRhdGVkX2F0CiAgICB9LCB7CiAgICAgIGRlc2NyaXB0aW9uOiBfd2l0aEN0eChmdW5jdGlvbiAoKSB7CiAgICAgICAgcmV0dXJuIFtfY3JlYXRlRWxlbWVudFZOb2RlKCJkaXYiLCBfaG9pc3RlZF81LCBbX2NyZWF0ZUVsZW1lbnRWTm9kZSgiZGl2IiwgewogICAgICAgICAgY2xhc3M6ICJjb2x1bW5fX3RpdGxlIiwKICAgICAgICAgIHRleHRDb250ZW50OiBfdG9EaXNwbGF5U3RyaW5nKHJlcG9zLm5hbWUpCiAgICAgICAgfSwgbnVsbCwgOAogICAgICAgIC8qIFBST1BTICovCiAgICAgICAgLCBfaG9pc3RlZF82KSwgX2NyZWF0ZUVsZW1lbnRWTm9kZSgiZGl2IiwgewogICAgICAgICAgY2xhc3M6ICJjb2x1bW5fX2Rlc2NyaXB0aW9uIiwKICAgICAgICAgIHRleHRDb250ZW50OiBfdG9EaXNwbGF5U3RyaW5nKHJlcG9zLmRlc2NyaXB0aW9uKQogICAgICAgIH0sIG51bGwsIDgKICAgICAgICAvKiBQUk9QUyAqLwogICAgICAgICwgX2hvaXN0ZWRfNyksIF9jcmVhdGVFbGVtZW50Vk5vZGUoImRpdiIsIF9ob2lzdGVkXzgsIFtfY3JlYXRlVk5vZGUoX2NvbXBvbmVudF90b29scywgewogICAgICAgICAgc3RhcjogcmVwb3Muc3RhcmdhemVyc19jb3VudCwKICAgICAgICAgIGZvcms6IHJlcG9zLmZvcmtzX2NvdW50CiAgICAgICAgfSwgbnVsbCwgOAogICAgICAgIC8qIFBST1BTICovCiAgICAgICAgLCBbInN0YXIiLCAiZm9yayJdKV0pXSldOwogICAgICB9KSwKICAgICAgXzogMgogICAgICAvKiBEWU5BTUlDICovCgogICAgfSwgMTAzMgogICAgLyogUFJPUFMsIERZTkFNSUNfU0xPVFMgKi8KICAgICwgWyJuaWNrIiwgInBhdGgiLCAiY29tbWVudHMiLCAib25Ub2dnbGVJc3N1ZXMiLCAiZGF0ZSJdKV0pOwogIH0pLCAxMjgKICAvKiBLRVlFRF9GUkFHTUVOVCAqLwogICkpXSldLCA2NAogIC8qIFNUQUJMRV9GUkFHTUVOVCAqLwogICk7Cn0="},{"version":3,"sources":["/Users/xeniya/Desktop/gitogram/src/pages/feeds/feeds.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"topline\">\n    <topline>\n      <template #headline>\n        <logo color='black'></logo>\n        <div class=\"topline__user-icons\">\n          <profileTools\n            :source=\"this.user?.avatar_url\"\n            @onLogout=\"logout\"\n            @onUser=\"$router.push({name: 'profile'})\"\n            @onHome=\"$router.push({name: 'feeds'})\"\n          ></profileTools>\n        </div>\n      </template>\n      <template #content>\n        <ul class=\"stories\">\n          <li class=\"stories__item\" v-for=\"story in getUnstarredOnly\" :key=\"story.id\">\n            <storyUserItem\n              :avatar=\"story.owner.avatar_url\"\n              :username=\"story.owner.login\"\n              @onPress=\"$router.push({name: 'stories', params: {initialSlide: story.id}})\"\n            />\n          </li>\n        </ul>\n      </template>\n    </topline>\n  </div>\n  <ul class=\"columns\">\n    <li class=\"columns-item\" v-for=\"repos in this.starred\" :key=\"repos.id\">\n      <column\n        :nick=\"repos.owner.login\"\n        :path=\"repos.owner.avatar_url\"\n        :comments=\"repos.issuesList\"\n        @toggleIssues='toggleIssues(repos, $event)'\n        :date=\"repos.updated_at\"\n      >\n        <template #description>\n          <div class=\"column__content\">\n            <div class=\"column__title\" v-text=\"repos.name\"></div>\n            <div class=\"column__description\" v-text=\"repos.description\"></div>\n            <div class=\"column__tools\">\n              <tools\n                :star=\"repos.stargazers_count\"\n                :fork=\"repos.forks_count\"\n              />\n            </div>\n          </div>\n        </template>\n      </column>\n    </li>\n  </ul>\n</template>\n\n<script>\nimport { topline } from '../../components/topline'\nimport { storyUserItem } from '../../components/storyUserItem'\nimport { logo } from '../../components/logo'\nimport { profileTools } from '../../components/profileTools'\nimport { column } from '../../components/column'\nimport { tools } from '../../components/tools'\nimport { mapState, mapActions, mapGetters } from 'vuex'\n\nexport default {\n  name: 'Feeds',\n  components: {\n    topline,\n    storyUserItem,\n    logo,\n    profileTools,\n    column,\n    tools\n  },\n  data () {\n    return {\n    }\n  },\n  computed: {\n    ...mapState({\n      trendings: state => state.data,\n      starred: state => state.likedOfMe,\n      user: state => state.user\n    }),\n    ...mapGetters(['getUnstarredOnly'])\n  },\n  methods: {\n    ...mapActions({\n      fetchTrendings: 'fetchTrendings',\n      fetchLikedOfMe: 'fetchLikedOfMe',\n      fetchUser: 'fetchUser',\n      logout: 'logout',\n      fetchIssue: 'fetchIssue'\n    }),\n    getData (repos) {\n      return {\n        title: repos.name,\n        description: repos.description,\n        username: repos.owner.login,\n        stars: repos.stargazers_count,\n        date: repos.updated_at\n      }\n    },\n    async toggleIssues (repos, event) {\n      if (event && !Object.prototype.hasOwnProperty.call(repos, 'issuesList')) {\n        try {\n          await this.fetchIssue({ id: repos.id, owner: repos.owner.login, repo: repos.name })\n        } catch (error) {\n          console.log(error)\n        }\n      }\n    }\n  },\n  async created () {\n    try {\n      if (!this.trendings.length) {\n        await this.fetchTrendings()\n      }\n      await this.fetchLikedOfMe()\n    } catch (error) {\n      console.log(error)\n    }\n  }\n}\n\n</script>\n\n<style lang=\"scss\" scoped src=\"./feeds.scss\"></style>\n"],"sourceRoot":""}]}