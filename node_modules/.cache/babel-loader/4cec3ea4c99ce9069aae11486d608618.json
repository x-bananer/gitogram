{"remainingRequest":"/Users/xeniya/Desktop/gitogram/node_modules/babel-loader/lib/index.js!/Users/xeniya/Desktop/gitogram/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/xeniya/Desktop/gitogram/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/xeniya/Desktop/gitogram/src/icons/icon.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/xeniya/Desktop/gitogram/src/icons/icon.vue","mtime":1642440951459},{"path":"/Users/xeniya/Desktop/gitogram/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/xeniya/Desktop/gitogram/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/xeniya/Desktop/gitogram/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/xeniya/Desktop/gitogram/node_modules/vue-loader-v16/dist/index.js","mtime":1628298225000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9vYmplY3RTcHJlYWQgZnJvbSAiL1VzZXJzL3hlbml5YS9EZXNrdG9wL2dpdG9ncmFtL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9vYmplY3RTcHJlYWQyIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuaW5jbHVkZXMuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcuaW5jbHVkZXMuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3Qua2V5cy5qcyI7CmltcG9ydCAqIGFzIGljb25zIGZyb20gJy4vdmFyaWFudHMnOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ2ljb24nLAogIGNvbXBvbmVudHM6IF9vYmplY3RTcHJlYWQoe30sIGljb25zKSwKICBwcm9wczogewogICAgbmFtZTogewogICAgICB0eXBlOiBTdHJpbmcsCiAgICAgIHJlcXVpcmVkOiB0cnVlLAogICAgICB2YWxpZGF0b3I6IGZ1bmN0aW9uIHZhbGlkYXRvcih2YWx1ZSkgewogICAgICAgIHJldHVybiBPYmplY3Qua2V5cyhpY29ucykuaW5jbHVkZXModmFsdWUpOwogICAgICB9CiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["/Users/xeniya/Desktop/gitogram/src/icons/icon.vue"],"names":[],"mappings":";;;;AAKA,OAAO,KAAK,KAAZ,MAAuB,YAAvB;AAEA,eAAe;AACb,EAAA,IAAI,EAAE,MADO;AAEb,EAAA,UAAU,oBACL,KADK,CAFG;AAKb,EAAA,KAAK,EAAE;AACL,IAAA,IAAI,EAAE;AACJ,MAAA,IAAI,EAAE,MADF;AAEJ,MAAA,QAAQ,EAAE,IAFN;AAGJ,MAAA,SAHI,qBAGO,KAHP,EAGc;AAChB,eAAO,MAAM,CAAC,IAAP,CAAY,KAAZ,EAAmB,QAAnB,CAA4B,KAA5B,CAAP;AACF;AALI;AADD;AALM,CAAf","sourcesContent":["<template>\n  <component :is=\"name\" />\n</template>\n\n<script>\nimport * as icons from './variants'\n\nexport default {\n  name: 'icon',\n  components: {\n    ...icons\n  },\n  props: {\n    name: {\n      type: String,\n      required: true,\n      validator (value) {\n        return Object.keys(icons).includes(value)\n      }\n    }\n  }\n}\n</script>\n"],"sourceRoot":""}]}