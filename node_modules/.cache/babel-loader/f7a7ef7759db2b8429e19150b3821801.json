{"remainingRequest":"/Users/xeniya/Desktop/gitogram/node_modules/thread-loader/dist/cjs.js!/Users/xeniya/Desktop/gitogram/node_modules/babel-loader/lib/index.js!/Users/xeniya/Desktop/gitogram/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/xeniya/Desktop/gitogram/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/xeniya/Desktop/gitogram/src/components/storiesSlider/storiesSlider.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/xeniya/Desktop/gitogram/src/components/storiesSlider/storiesSlider.vue","mtime":1642488971825},{"path":"/Users/xeniya/Desktop/gitogram/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/xeniya/Desktop/gitogram/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/xeniya/Desktop/gitogram/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/xeniya/Desktop/gitogram/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/xeniya/Desktop/gitogram/node_modules/vue-loader-v16/dist/index.js","mtime":1628298225000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/xeniya/Desktop/gitogram/src/components/storiesSlider/storiesSlider.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"c-stories-slider\">\n    <div class=\"c-stories-slider__container\">\n      <ul class=\"stories\" ref=\"slider\">\n        <li\n          class=\"stories__item\"\n          v-for=\"(trending, ndx) in trendings\"\n          :key=\"trending.id\"\n          ref=\"item\"\n        >\n          <slideStory\n            :data=\"getStoryData(trending)\"\n            :active=\"slideNdx === ndx\"\n            :loading=\"slideNdx === ndx && loading\"\n            :btnsShown=\"activeBtns\"\n            @onNextSlide=\"handleSlide(ndx + 1)\"\n            @onPrevSlide=\"handleSlide(ndx - 1)\"\n            @onProgressFinish=\"handleSlideOnProgressFinish(ndx + 1)\"\n            @onFollow=\"starRepo\"\n            @onUnfollow=\"unStarRepo\"\n          />\n        </li>\n      </ul>\n    </div>\n  </div>\n</template>\n\n<script>\nimport slideStory from '../slideStory/slideStory.vue'\nimport { mapState, mapActions } from 'vuex'\n\nexport default {\n  name: 'storiesSlider',\n  components: {\n    slideStory\n  },\n  props: {\n    initialSlide: {\n      type: Number\n    }\n  },\n  data () {\n    return {\n      slideNdx: 0,\n      sliderPosition: 0,\n      loading: false,\n      btnsShown: true\n    }\n  },\n  computed: {\n    ...mapState({\n      trendings: (state) => state.data\n    }),\n    activeBtns () {\n      if (this.btnsShown === false) return []\n      if (this.slideNdx === 0) return ['next']\n      if (this.slideNdx === this.trendings.length - 1) return ['prev']\n      return ['next', 'prev']\n    }\n  },\n  methods: {\n    ...mapActions({\n      fetchTrendings: 'fetchTrendings',\n      fetchReadme: 'fetchReadme',\n      starRepo: 'starRepo',\n      unStarRepo: 'unStarRepo'\n    }),\n    async fetchReadmeForActiveSlide () {\n      const { id, owner, name } = this.trendings[this.slideNdx]\n      await this.fetchReadme({ id, owner: owner.login, repo: name })\n    },\n    getStoryData (obj) {\n      return {\n        id: obj.id,\n        userAvatar: obj.owner?.avatar_url,\n        username: obj.owner?.login,\n        content: obj.readme,\n        following: obj.following\n      }\n    },\n    moveSlider (slideNdx) {\n      const { slider, item } = this.$refs\n      const slideWidth = parseInt(\n        getComputedStyle(item).getPropertyValue('width'),\n        10\n      )\n      this.slideNdx = slideNdx\n      this.sliderPosition = (-(slideWidth * slideNdx))\n      slider.style.transform = `translateX(${this.sliderPosition}px)`\n    },\n    async loadReadme () {\n      this.loading = true\n      this.btnsShown = false\n      try {\n        await this.fetchReadmeForActiveSlide()\n      } catch (error) {\n        console.log(error)\n        throw error\n      } finally {\n        this.loading = false\n        this.btnsShown = true\n      }\n    },\n    async handleSlide (slideNdx) {\n      this.moveSlider(slideNdx)\n      await this.loadReadme()\n    },\n    async handleSlideOnProgressFinish (slideNdx) {\n      if (this.trendings.length !== slideNdx) {\n        this.moveSlider(slideNdx)\n        await this.loadReadme()\n      }\n    }\n  },\n  async mounted () {\n    if (this.initialSlide) {\n      const ndx = this.trendings.findIndex(\n        (item) => item.id === this.initialSlide\n      )\n      await this.handleSlide(ndx)\n    }\n    if (!this.trendings.length) {\n      await this.fetchTrendings()\n    }\n    await this.loadReadme()\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped src=\"./storiesSlider.scss\"></style>\n"],"sourceRoot":""}]}